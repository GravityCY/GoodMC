plugins {
	id 'fabric-loom' version '1.1-SNAPSHOT'
	id 'maven-publish'
}

version = project.mod_version
group = project.maven_group

loom {
	accessWidenerPath = file("src/main/resources/goodmc.accesswidener")
	log4jConfigs.from(file("log4j.xml"))
}

repositories {
	// Add repositories to retrieve artifacts from in here.
	// You should only use this when depending on other mods because
	// Loom adds the essential maven repositories to download Minecraft and libraries from automatically.
	// See https://docs.gradle.org/current/userguide/declaring_repositories.html
	// for more information about repositories.
	mavenLocal()
	maven { url = "https://maven.terraformersmc.com/" } // Mod Menu
	maven { url = "https://api.modrinth.com/maven" } // LazyDFU
	maven { url = "https://maven.shedaniel.me/" } // Cloth Config

	maven {	url = "https://raw.githubusercontent.com/Aton-Kish/mcmod/maven" }

	// Reinf Shulker Deps
	maven { url = "https://maven.kyrptonaught.dev" }
	maven { url = "https://maven.misterpemodder.com/libs-release"	}
	maven { url = "https://jitpack.io"	}
}

dependencies {
	// To change the versions see the gradle.properties file

	minecraft("com.mojang:minecraft:${project.minecraft_version}")
	mappings("net.fabricmc:yarn:${project.yarn_mappings}:v2")
	// Fabric API / Loader
	modImplementation("net.fabricmc.fabric-api:fabric-api:${project.fabric_version}")
	modImplementation("net.fabricmc:fabric-loader:${project.loader_version}")

	// Mod Menu
	modImplementation("com.terraformersmc:modmenu:${project.modmenu_version}")
	// Cloth Config
	modImplementation("me.shedaniel.cloth:cloth-config-fabric:${project.cloth_config_version}")
	// Enchantable Blocks - Locally Built https://github.com/GravityCY/EnchantableBlockEntities
	modImplementation("me.gravityio:enchantable-be:${project.enchantable_blocks_version}")
	include("me.gravityio:enchantable-be:${project.enchantable_blocks_version}")

	// Reinforced Shulkers
	modCompileOnly("atonkish.reinfcore:reinforced-core:${project.reinf_core_version}") {
		transitive = false
	}
	modCompileOnly("atonkish.reinfshulker:reinforced-shulker-boxes:${project.reinf_shulker_version}") {
		transitive = false
	}

	implementation("com.github.LlamaLad7:MixinExtras:0.1.1")
	include("com.github.LlamaLad7:MixinExtras:0.1.1")
	annotationProcessor("com.github.LlamaLad7:MixinExtras:0.1.1")

	// Lazy DFU
	modLocalRuntime("maven.modrinth:lazydfu:${project.lazy_dfu_version}")
}

base {
	archivesName = project.mod_id
}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand 	"version": project.version,
				"loader_version": project.loader_version,
				"fabric_version": project.fabric_version,
				"minecraft_version": project.minecraft_version
	}
}

tasks.withType(JavaCompile).configureEach {
	// Minecraft 1.18 (1.18-pre2) upwards uses Java 17.
	it.options.release = 17
}

java {
	// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
	// if it is present.
	// If you remove this line, sources will not be generated.
	withSourcesJar()

	sourceCompatibility = JavaVersion.VERSION_17
	targetCompatibility = JavaVersion.VERSION_17
}

jar {
	exclude("me/gravityio/goodmc/client/tweaks/todo_list/**")
	from("LICENSE") {
		rename { "${it}_${base.archivesName.get()}"}
	}
}

// configure the maven publication
publishing {
	publications {
		mavenJava(MavenPublication) {
			artifactId = project.mod_id
			from components.java
		}
	}

	// See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
	repositories {
		// Add repositories to publish to here.
		// Notice: This block does NOT have the same function as the block in the top level.
		// The repositories here will be used for publishing your artifact, not for
		// retrieving dependencies.
	}
}
